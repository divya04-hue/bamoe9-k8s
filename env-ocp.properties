PORT_BASE=30

export _FOLDER=ocp-CRs

# namespace
export _NS=bamoe-ns

# storage
export _CR_NAME_PVC=postgres-bamoe-pvc

# postgres
export _PG_USER=postgres
export _PG_PWD=myPgPassword
export _PG_PWD_ENC=$(echo "${_PG_PWD}" | base64 )
export _CR_NAME_SECR_PWD_POSTGRES=postgres-pwd-secret
export _CR_NAME_DEP_POSTGRES=postgres
export _CR_NAME_DEP_POSTGRES_PORT=5432
export _INIT_DB_FILE=init.sql
export _BAMOE_DB_USER=bamoedb-user
export _BAMOE_DB_PASS=bamoedb-pass

# pgadmin
export _CR_NAME_DEP_PGADMIN=pgadmin
export _PGADMIN_NODE_PORT=${PORT_BASE}200

# keycloak
export _CR_NAME_DEP_KC=keycloak
export _REALM_NAME=custom-realm
export _KC_NODE_PORT=${PORT_BASE}201

# bamoe
# !!! The OIDC URLs and PORT must be the same URL used by a client to get the access token, the URL is validated by the policy 'myfrontendsecpolicy'
# set your /etc/hosts file with an entry with ip address equal to IP from 'minikube ip' command, the hostname configured here and used by a client can be different

export _OIDC_REALM_URL=http://keycloak:${_KC_NODE_PORT}/realms/my-realm-1
export _QUARKUS_DS_JDBC_URL=jdbc:postgresql://${_CR_NAME_DEP_POSTGRES}:${_CR_NAME_DEP_POSTGRES_PORT}/bamoedb
# The reactive datsource value MUST not have 'jdbc:' prefix as from https://access.redhat.com/solutions/7011882
export _QUARKUS_DS_REACTIVE_URL=postgresql://${_CR_NAME_DEP_POSTGRES}:${_CR_NAME_DEP_POSTGRES_PORT}/bamoedb
export _CR_NAME_DEP_BAMOE=bamoe
export _BAMOE_FRONTEND_NODE_PORT=${PORT_BASE}202
# backend port used only for test/debug, backend container must not be reachable from outside the pod in a real scenario.
export _BAMOE_BACKEND_NODE_PORT=${PORT_BASE}203
